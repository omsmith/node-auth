'use strict';

const AbstractPublicKeyStore = require('brightspace-auth-keys').AbstractPublicKeyStore;

const clock = require('./clock');

class DynamoPublicKeyStore extends AbstractPublicKeyStore {
	constructor(client, tableName) {
		super();
		this._client = client;
		this._tableName = tableName;
	}

	_storePublicKey(publicKey, expiresAt) {
		return this._client.putItem(
			{
				TableName: this._tableName,
				Item: {
					'PublicKey': {
						'S': publicKey
					},
					'ExpiresAt': {
						'N': '' + expiresAt
					}
				}
			}
		).promise();
	}

	_lookupPublicKeys() {
		const parameters = {
			TableName: this._tableName,
			FilterExpression: '#e > :expires_at',
			ExpressionAttributeNames: {
				'#e': 'ExpiresAt'
			},
			ExpressionAttributeValues: {
				':expires_at': {
					'N': '' + clock()
				}
			},
			ConsistentRead: true
		};

		return this._scanUntilComplete(null, parameters, []);
	}

	_scanUntilComplete(response, parameters, items) {
		if (response) {
			if (response.Items) {
				items = items.concat(response.Items.map(row => row.PublicKey.S));
			}

			if (response.LastEvaluatedKey) {
				parameters.ExclusiveStartKey = response.LastEvaluatedKey;
			} else {
				return Promise.resolve(items);
			}
		}

		return this
			._client
			.scan(parameters)
			.promise()
			.then(response => this._scanUntilComplete(response, parameters, items));
	}
}

module.exports = DynamoPublicKeyStore;
module.exports.createTable = require('./public-key-table-setup');
